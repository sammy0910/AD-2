class BSTNode {
    String key;
    BSTNode left, right;

    public BSTNode(String item) {
        key = item;
        left = right = null;
    }
}

class BST {
    BSTNode root;

    BST() {
        root = null;
    }

    void insert(String key) {
        root = insertRec(root, key);
    }

    BSTNode insertRec(BSTNode root, String key) {
        if (root == null) {
            root = new BSTNode(key);
            return root;
        }

        if (key.compareTo(root.key) < 0)
            root.left = insertRec(root.left, key);
        else if (key.compareTo(root.key) > 0)
            root.right = insertRec(root.right, key);

        return root;
    }

    boolean search(String key) {
        return searchRec(root, key);
    }

    boolean searchRec(BSTNode root, String key) {
        if (root == null)
            return false;

        if (root.key.equals(key))
            return true;

        if (root.key.compareTo(key) > 0)
            return searchRec(root.left, key);

        return searchRec(root.right, key);
    }
}
