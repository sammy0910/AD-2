import java.util.Arrays;
import java.util.PriorityQueue;

class Lecture {
    int start, end;

    Lecture(int start, int end) {
        this.start = start;
        this.end = end;
    }
}

public class IntervalPartitioning {
    public static int minMeetingRooms(Lecture[] intervals) {
        Arrays.sort(intervals, (a, b) -> a.start - b.start);
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        pq.add(intervals[0].end);

        for (int i = 1; i < intervals.length; i++) {
            if (intervals[i].start >= pq.peek()) {
                pq.poll();
            }
            pq.add(intervals[i].end);
        }

        return pq.size();
    }

    public static void main(String[] args) {
        Lecture[] intervals = { new Lecture(0, 30), new Lecture(5, 10), new Lecture(15, 20) };
        System.out.println("Minimum number of conference rooms required: " + minMeetingRooms(intervals));
    }
}
